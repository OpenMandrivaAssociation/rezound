diff -up rezound-master/src/frontend_fox/CChannelSelectDialog.cpp.omv~ rezound-master/src/frontend_fox/CChannelSelectDialog.cpp
--- rezound-master/src/frontend_fox/CChannelSelectDialog.cpp.omv~	2022-09-26 03:19:28.299007335 +0200
+++ rezound-master/src/frontend_fox/CChannelSelectDialog.cpp	2022-09-26 03:19:34.702050431 +0200
@@ -90,7 +90,7 @@ bool CChannelSelectDialog::show(CActionS
 	// only enable the check boxes that there are channels for
 	for(unsigned t=0;t<MAX_CHANNELS;t++)
 	{
-		checkBoxes[t]->setCheck(FALSE);
+		checkBoxes[t]->setCheck(false);
 		if(t<actionSound->sound->getChannelCount())
 			checkBoxes[t]->show();
 		else
@@ -98,7 +98,7 @@ bool CChannelSelectDialog::show(CActionS
 	}
 
 	for(unsigned t=0;t<actionSound->sound->getChannelCount();t++)
-		checkBoxes[t]->setCheck(actionSound->doChannel[t] ? TRUE : FALSE);
+		checkBoxes[t]->setCheck(actionSound->doChannel[t] ? true : false);
 
 	// when the number of shown or hidden widgets changes the frame needs to be told to recalc
 	getFrame()->recalc();
@@ -108,7 +108,7 @@ bool CChannelSelectDialog::show(CActionS
 		bool ret=false; // or all the checks together... if it's false, then it's like hitting cancel
 		for(unsigned t=0;t<MAX_CHANNELS;t++)
 		{
-			actionSound->doChannel[t]=checkBoxes[t]->getCheck()==TRUE ? true : false;
+			actionSound->doChannel[t]=checkBoxes[t]->getCheck()==true ? true : false;
 			ret|=actionSound->doChannel[t];
 		}
 
@@ -126,10 +126,10 @@ void CChannelSelectDialog::hide()
 long CChannelSelectDialog::onDefaultButton(FXObject *sender,FXSelector sel,void *ptr)
 {
 	for(unsigned x=0;x<MAX_CHANNELS;x++)
-		checkBoxes[x]->setCheck(FALSE);
+		checkBoxes[x]->setCheck(false);
 
 	for(unsigned x=0;x<actionSound->sound->getChannelCount();x++)
-		checkBoxes[x]->setCheck(actionSound->doChannel[x] ? TRUE : FALSE);
+		checkBoxes[x]->setCheck(actionSound->doChannel[x] ? true : false);
 
 	return 1;
 }
@@ -137,7 +137,7 @@ long CChannelSelectDialog::onDefaultButt
 long CChannelSelectDialog::onClearButton(FXObject *sender,FXSelector sel,void *ptr)
 {
 	for(unsigned x=0;x<MAX_CHANNELS;x++)
-		checkBoxes[x]->setCheck(FALSE);
+		checkBoxes[x]->setCheck(false);
 	return 1;
 }
 
diff -up rezound-master/src/frontend_fox/CCueListDialog.cpp.omv~ rezound-master/src/frontend_fox/CCueListDialog.cpp
--- rezound-master/src/frontend_fox/CCueListDialog.cpp.omv~	2022-09-26 03:20:53.613575344 +0200
+++ rezound-master/src/frontend_fox/CCueListDialog.cpp	2022-09-26 03:21:36.041853206 +0200
@@ -85,15 +85,14 @@ CCueListDialog::CCueListDialog(FXWindow
 {
 	// make cueList have a fixed width font
 	FXFont *listFont=cueList->getFont();
-        FXFontDesc d;
-        listFont->getFontDesc(d);
+        FXFontDesc d = listFont->getFontDesc();
 	strcpy(d.face,"courier");
         listFont=new FXFont(getApp(),d);
 	cueList->setFont(listFont);
 
 
 		// ??? this doesn't seem to be having any effect... ask mailing list
-	closeButton->setDefault(TRUE);
+	closeButton->setDefault(true);
 
 	// keep the dialog from getting too narrow
 	//ASSURE_WIDTH(contents,160);
diff -up rezound-master/src/frontend_fox/CKeyBindingsDialog.cpp.omv~ rezound-master/src/frontend_fox/CKeyBindingsDialog.cpp
--- rezound-master/src/frontend_fox/CKeyBindingsDialog.cpp.omv~	2022-09-26 03:22:35.702239329 +0200
+++ rezound-master/src/frontend_fox/CKeyBindingsDialog.cpp	2022-09-26 03:22:41.986279709 +0200
@@ -208,7 +208,7 @@ long CKeyBindingsDialog::onDefineKeyBind
 			}
 			else
 			{
-				string tmp_key=unparseAccel(keycode).text();
+				string tmp_key=FX::FXAccelTable::unparseAccel(keycode).text();
 				if(tmp_key=="")
 					Error(_("Unhandled Key Combination"));
 				else
diff -up rezound-master/src/frontend_fox/CMacroActionParamsDialog.cpp.omv~ rezound-master/src/frontend_fox/CMacroActionParamsDialog.cpp
--- rezound-master/src/frontend_fox/CMacroActionParamsDialog.cpp.omv~	2022-09-26 03:23:01.750406366 +0200
+++ rezound-master/src/frontend_fox/CMacroActionParamsDialog.cpp	2022-09-26 03:23:06.585437273 +0200
@@ -63,7 +63,7 @@ CMacroActionParamsDialog::CMacroActionPa
 
 	//frame1=new FXHorizontalFrame(getFrame(),FRAME_RAISED | LAYOUT_FILL_X|LAYOUT_FILL_Y, 0,0,0,0, 0,0,0,0, 1,1);
 		askToPromptForActionParametersAtPlaybackCheckButton=new FXCheckButton(getFrame(),"Ask to Prompt For Action Parameters");
-		askToPromptForActionParametersAtPlaybackCheckButton->setCheck(FALSE);
+		askToPromptForActionParametersAtPlaybackCheckButton->setCheck(false);
 
 	// ??? there might be a better way of wording this (especially the "percentage" term)
 	// ??? if the start or stop positions are on exact cue positions, then we could ask to set the position to the same cue names
@@ -76,7 +76,7 @@ CMacroActionParamsDialog::CMacroActionPa
 		startPosRadioButton6=new FXRadioButton(frame1,_("Same Proportionate Time Before the Stop Position"),this,ID_RADIO_BUTTON);
 		startPosRadioButton9=new FXRadioButton(frame1,_("Same Cue Name"),this,ID_RADIO_BUTTON);
 		startPosRadioButton1=new FXRadioButton(frame1,_("Leave in the Same Position From Previous Action"),this,ID_RADIO_BUTTON);
-		startPosRadioButton4->setCheck(TRUE);
+		startPosRadioButton4->setCheck(true);
 
 	frame1=stopPosPositioningGroupBox=new FXGroupBox(getFrame(),_("Set the Stop Position..."),GROUPBOX_NORMAL | FRAME_GROOVE);
 		stopPosRadioButton4=new FXRadioButton(frame1,_("Same Proportionate Time"),this,ID_RADIO_BUTTON);
@@ -86,7 +86,7 @@ CMacroActionParamsDialog::CMacroActionPa
 		stopPosRadioButton8=new FXRadioButton(frame1,_("Same Proportionate Time After the Start Position"),this,ID_RADIO_BUTTON);
 		stopPosRadioButton9=new FXRadioButton(frame1,_("Same Cue Name"),this,ID_RADIO_BUTTON);
 		stopPosRadioButton1=new FXRadioButton(frame1,_("Leave in the Same Position From Previous Action"),this,ID_RADIO_BUTTON);
-		stopPosRadioButton4->setCheck(TRUE);
+		stopPosRadioButton4->setCheck(true);
 }
 
 CMacroActionParamsDialog::~CMacroActionParamsDialog()
@@ -127,10 +127,10 @@ bool CMacroActionParamsDialog::showIt(co
 		else
 		{
 			startPosRadioButton9->disable();
-			if(startPosRadioButton9->getCheck()==TRUE)
+			if(startPosRadioButton9->getCheck()==true)
 			{
-				startPosRadioButton1->setCheck(TRUE);
-				startPosRadioButton9->setCheck(FALSE);
+				startPosRadioButton1->setCheck(true);
+				startPosRadioButton9->setCheck(false);
 			}
 		}
 
@@ -142,10 +142,10 @@ bool CMacroActionParamsDialog::showIt(co
 		else
 		{
 			stopPosRadioButton9->disable();
-			if(stopPosRadioButton9->getCheck()==TRUE)
+			if(stopPosRadioButton9->getCheck()==true)
 			{
-				stopPosRadioButton1->setCheck(TRUE);
-				stopPosRadioButton9->setCheck(FALSE);
+				stopPosRadioButton1->setCheck(true);
+				stopPosRadioButton9->setCheck(false);
 			}
 		}
 	}
@@ -161,37 +161,37 @@ reshow:
 	
 	if(execute(PLACEMENT_CURSOR))
 	{
-		macroActionParameters.askToPromptForActionParametersAtPlayback=(askToPromptForActionParametersAtPlaybackCheckButton->getCheck()==TRUE);
+		macroActionParameters.askToPromptForActionParametersAtPlayback=(askToPromptForActionParametersAtPlaybackCheckButton->getCheck()==true);
 
-		if(startPosRadioButton1->getCheck()==TRUE)
+		if(startPosRadioButton1->getCheck()==true)
 			macroActionParameters.startPosPositioning=AFrontendHooks::MacroActionParameters::spLeaveAlone;
-		else if(startPosRadioButton2->getCheck()==TRUE)
+		else if(startPosRadioButton2->getCheck()==true)
 			macroActionParameters.startPosPositioning=AFrontendHooks::MacroActionParameters::spAbsoluteTimeFromBeginning;
-		else if(startPosRadioButton3->getCheck()==TRUE)
+		else if(startPosRadioButton3->getCheck()==true)
 			macroActionParameters.startPosPositioning=AFrontendHooks::MacroActionParameters::spAbsoluteTimeFromEnd;
-		else if(startPosRadioButton4->getCheck()==TRUE)
+		else if(startPosRadioButton4->getCheck()==true)
 			macroActionParameters.startPosPositioning=AFrontendHooks::MacroActionParameters::spProportionateTimeFromBeginning;
-		else if(startPosRadioButton5->getCheck()==TRUE)
+		else if(startPosRadioButton5->getCheck()==true)
 			macroActionParameters.startPosPositioning=AFrontendHooks::MacroActionParameters::spAbsoluteTimeFromStopPosition;
-		else if(startPosRadioButton6->getCheck()==TRUE)
+		else if(startPosRadioButton6->getCheck()==true)
 			macroActionParameters.startPosPositioning=AFrontendHooks::MacroActionParameters::spProportionateTimeFromStopPosition;
-		else if(startPosRadioButton9->getCheck()==TRUE)
+		else if(startPosRadioButton9->getCheck()==true)
 			macroActionParameters.startPosPositioning=AFrontendHooks::MacroActionParameters::spSameCueName;
 		macroActionParameters.startPosCueName=startPositionCueName;
 
-		if(stopPosRadioButton1->getCheck()==TRUE)
+		if(stopPosRadioButton1->getCheck()==true)
 			macroActionParameters.stopPosPositioning=AFrontendHooks::MacroActionParameters::spLeaveAlone;
-		else if(stopPosRadioButton2->getCheck()==TRUE)
+		else if(stopPosRadioButton2->getCheck()==true)
 			macroActionParameters.stopPosPositioning=AFrontendHooks::MacroActionParameters::spAbsoluteTimeFromBeginning;
-		else if(stopPosRadioButton3->getCheck()==TRUE)
+		else if(stopPosRadioButton3->getCheck()==true)
 			macroActionParameters.stopPosPositioning=AFrontendHooks::MacroActionParameters::spAbsoluteTimeFromEnd;
-		else if(stopPosRadioButton4->getCheck()==TRUE)
+		else if(stopPosRadioButton4->getCheck()==true)
 			macroActionParameters.stopPosPositioning=AFrontendHooks::MacroActionParameters::spProportionateTimeFromBeginning;
-		else if(stopPosRadioButton7->getCheck()==TRUE)
+		else if(stopPosRadioButton7->getCheck()==true)
 			macroActionParameters.stopPosPositioning=AFrontendHooks::MacroActionParameters::spAbsoluteTimeFromStartPosition;
-		else if(stopPosRadioButton8->getCheck()==TRUE)
+		else if(stopPosRadioButton8->getCheck()==true)
 			macroActionParameters.stopPosPositioning=AFrontendHooks::MacroActionParameters::spProportionateTimeFromStartPosition;
-		else if(stopPosRadioButton9->getCheck()==TRUE)
+		else if(stopPosRadioButton9->getCheck()==true)
 			macroActionParameters.stopPosPositioning=AFrontendHooks::MacroActionParameters::spSameCueName;
 		macroActionParameters.stopPosCueName=stopPositionCueName;
 
@@ -213,8 +213,8 @@ long CMacroActionParamsDialog::onRadioBu
 	{
 		FXGroupBox *p=(FXGroupBox *)(((FXRadioButton *)sender)->getParent());
 		for(int t=0;t<p->numChildren();t++)
-			((FXRadioButton *)p->childAtIndex(t))->setCheck(FALSE);
-		((FXRadioButton *)sender)->setCheck(TRUE);
+			((FXRadioButton *)p->childAtIndex(t))->setCheck(false);
+		((FXRadioButton *)sender)->setCheck(true);
 	}
 
 	return 0;
diff -up rezound-master/src/frontend_fox/CMainWindow.cpp.omv~ rezound-master/src/frontend_fox/CMainWindow.cpp
--- rezound-master/src/frontend_fox/CMainWindow.cpp.omv~	2022-09-26 03:23:37.020631154 +0200
+++ rezound-master/src/frontend_fox/CMainWindow.cpp	2022-09-26 03:27:02.473913813 +0200
@@ -245,7 +245,7 @@ CMainWindow::CMainWindow(FXApp* a) :
 			u=new FXVerticalFrame(t,FRAME_NONE, 0,0,0,0, 0,0,0,0, 0,0);
 
 			shuttleFont=getApp()->getNormalFont();
-			shuttleFont->getFontDesc(d);
+			d=shuttleFont->getFontDesc();
 			d.weight=FONTWEIGHT_LIGHT;
 			d.size=65;
 			shuttleFont=new FXFont(getApp(),d);
@@ -305,7 +305,7 @@ CMainWindow::CMainWindow(FXApp* a) :
 			soundList=new FXIconList(t,this,ID_SOUND_LIST,HSCROLLER_NEVER|ICONLIST_BROWSESELECT|LAYOUT_FILL_X|LAYOUT_FILL_Y);
 
 				soundListFont=getApp()->getNormalFont();
-				shuttleFont->getFontDesc(d);
+				d=shuttleFont->getFontDesc();
 				d.weight=FONTWEIGHT_NORMAL;
 				d.size=80;
 				soundListFont=new FXFont(getApp(),d);
@@ -313,7 +313,7 @@ CMainWindow::CMainWindow(FXApp* a) :
 				soundList->setFont(soundListFont);
 
 				soundListHeaderFont=getApp()->getNormalFont();
-				shuttleFont->getFontDesc(d);
+				d=shuttleFont->getFontDesc();
 				d.weight=FONTWEIGHT_BOLD;
 				d.size=80;
 				soundListHeaderFont=new FXFont(getApp(),d);
@@ -1306,7 +1306,7 @@ void CMainWindow::setupKeyBindings()
 			if(value=="")
 				continue; // no key bound to this action
 
-			FXHotKey acckey=parseAccel(value.c_str());
+			FXHotKey acckey=FX::FXAccelTable::parseAccel(value.c_str());
 			mc->setAccelText(value.c_str());
 
 			/* these shuttle controls have to be handle specially because they require key up events to return the shuttle to the middle */
@@ -1347,7 +1347,7 @@ long CMainWindow::onSetupKeyBindings(FXO
 	vector<FXHotKey> removeKeyBindingsList;
 	const vector<string> actionsWithKeyBindings=gKeyBindingsStore->getChildKeys("");
 	for(size_t t=0;t<actionsWithKeyBindings.size();t++)
-		removeKeyBindingsList.push_back(parseAccel(gKeyBindingsStore->getValue<string>(actionsWithKeyBindings[t]).c_str()));
+		removeKeyBindingsList.push_back(FX::FXAccelTable::parseAccel(gKeyBindingsStore->getValue<string>(actionsWithKeyBindings[t]).c_str()));
 
 	if(gKeyBindingsDialog->showIt(gKeyBindingRegistry))
 	{
diff -up rezound-master/src/frontend_fox/CMetersWindow.cpp.omv~ rezound-master/src/frontend_fox/CMetersWindow.cpp
--- rezound-master/src/frontend_fox/CMetersWindow.cpp.omv~	2022-09-26 03:27:35.157114336 +0200
+++ rezound-master/src/frontend_fox/CMetersWindow.cpp	2022-09-26 03:28:02.104279052 +0200
@@ -97,8 +97,7 @@ public:
 		setBackColor(M_BACKGROUND);
 
 		// create the font to use for numbers
-		FXFontDesc d;
-		statusFont->getFontDesc(d);
+		FXFontDesc d = statusFont->getFontDesc();
 		d.size=60;
 		d.weight=FONTWEIGHT_NORMAL;
 		statusFont=new FXFont(getApp(),d);
@@ -340,8 +339,7 @@ public:
 		setBackColor(M_BACKGROUND);
 
 		// create the font to use for numbers
-		FXFontDesc d;
-		statusFont->getFontDesc(d);
+		FXFontDesc d = statusFont->getFontDesc();
 		d.size=60;
 		d.weight=FONTWEIGHT_NORMAL;
 		statusFont=new FXFont(getApp(),d);
@@ -512,8 +510,7 @@ public:
 
 
 		// create the font to use for numbers
-		FXFontDesc d;
-		statusFont->getFontDesc(d);
+		FXFontDesc d = statusFont->getFontDesc();
 		d.size=60;
 		d.weight=FONTWEIGHT_NORMAL;
 		statusFont=new FXFont(getApp(),d);
@@ -748,8 +745,7 @@ public:
 			labelFrame->setBackColor(M_BACKGROUND);
 
 		// create the font to use for numbers
-		FXFontDesc d;
-		statusFont->getFontDesc(d);
+		FXFontDesc d = statusFont->getFontDesc();
 		d.size=60;
 		d.weight=FONTWEIGHT_NORMAL;
 		statusFont=new FXFont(getApp(),d);
@@ -1059,8 +1055,7 @@ CMetersWindow::CMetersWindow(FXComposite
 	soundPlayer(NULL)
 {
 	// create the font to use for meters
-	FXFontDesc d;
-	statusFont->getFontDesc(d);
+	FXFontDesc d = statusFont->getFontDesc();
 	d.size=60;
 	d.weight=FONTWEIGHT_NORMAL;
 	statusFont=new FXFont(getApp(),d);
diff -up rezound-master/src/frontend_fox/CMp3Dialog.cpp.omv~ rezound-master/src/frontend_fox/CMp3Dialog.cpp
--- rezound-master/src/frontend_fox/CMp3Dialog.cpp.omv~	2022-09-26 03:29:03.774654116 +0200
+++ rezound-master/src/frontend_fox/CMp3Dialog.cpp	2022-09-26 03:29:08.554683082 +0200
@@ -148,7 +148,7 @@ bool CMp3Dialog::show(AFrontendHooks::Mp
 			parameters.quality=atoi(qualityComboBox->getText().text());
 		}
 
-		parameters.useFlagsOnly= useOnlyFlagsButton->getCheck()==TRUE;
+		parameters.useFlagsOnly= useOnlyFlagsButton->getCheck()==true;
 
 		parameters.additionalFlags= additionalFlagsTextBox->getText().text();
 
@@ -174,28 +174,28 @@ long CMp3Dialog::onRadioButton(FXObject
 		return 1;
 
 	// turn off all buttons
-	CBRButton->setCheck(FALSE);
+	CBRButton->setCheck(false);
 	setEnable((FXWindow *)CBRFrame,false);
 
-	ABRButton->setCheck(FALSE);
+	ABRButton->setCheck(false);
 	setEnable((FXWindow *)ABRFrame,false);
 
-	qualityButton->setCheck(FALSE);
+	qualityButton->setCheck(false);
 	setEnable((FXWindow *)qualityFrame,false);
 
 	if(sender==CBRButton)
 	{
-		CBRButton->setCheck(TRUE);
+		CBRButton->setCheck(true);
 		setEnable((FXWindow *)CBRFrame,true);
 	}
 	else if(sender==ABRButton)
 	{
-		ABRButton->setCheck(TRUE);
+		ABRButton->setCheck(true);
 		setEnable((FXWindow *)ABRFrame,true);
 	}
 	else if(sender==qualityButton)
 	{
-		qualityButton->setCheck(TRUE);
+		qualityButton->setCheck(true);
 		setEnable((FXWindow *)qualityFrame,true);
 	}
 
diff -up rezound-master/src/frontend_fox/CNewSoundDialog.cpp.omv~ rezound-master/src/frontend_fox/CNewSoundDialog.cpp
--- rezound-master/src/frontend_fox/CNewSoundDialog.cpp.omv~	2022-09-26 03:29:20.623756154 +0200
+++ rezound-master/src/frontend_fox/CNewSoundDialog.cpp	2022-09-26 03:29:23.826775532 +0200
@@ -272,7 +272,7 @@ void CNewSoundDialog::restoreDefault()
 		sampleRateComboBox->setText(istring(	gSettingsRegistry->getValue<unsigned>	(keyPrefix DOT "sampleRate")).c_str());
 		lengthComboBox->setText(istring(	gSettingsRegistry->getValue<sample_pos_t>(keyPrefix DOT "length")).c_str());
 
-		rememberAsDefault->setCheck(TRUE);
+		rememberAsDefault->setCheck(true);
 	}
 }
 
diff -up rezound-master/src/frontend_fox/COggDialog.cpp.omv~ rezound-master/src/frontend_fox/COggDialog.cpp
--- rezound-master/src/frontend_fox/COggDialog.cpp.omv~	2022-09-26 03:29:37.823860138 +0200
+++ rezound-master/src/frontend_fox/COggDialog.cpp	2022-09-26 03:29:41.983885261 +0200
@@ -140,29 +140,29 @@ long COggDialog::onRadioButton(FXObject
 		return 1;
 
 	// turn off all buttons
-	CBRButton->setCheck(FALSE);
+	CBRButton->setCheck(false);
 	setEnable((FXWindow *)CBRFrame,false);
 
-	VBRButton->setCheck(FALSE);
+	VBRButton->setCheck(false);
 	setEnable((FXWindow *)VBRFrame,false);
 
-	qualityButton->setCheck(FALSE);
+	qualityButton->setCheck(false);
 	setEnable((FXWindow *)qualityFrame,false);
 
 	// enable button that was clicked
 	if(sender==CBRButton)
 	{
-	       	CBRButton->setCheck(TRUE);
+	       	CBRButton->setCheck(true);
 		setEnable((FXWindow *)CBRFrame,true);
 	}
 	else if(sender==VBRButton)
 	{
-		VBRButton->setCheck(TRUE);
+		VBRButton->setCheck(true);
 		setEnable((FXWindow *)VBRFrame,true);
 	}
 	else if(sender==qualityButton)
 	{
-		qualityButton->setCheck(TRUE);
+		qualityButton->setCheck(true);
 		setEnable((FXWindow *)qualityFrame,true);
 	}
 
diff -up rezound-master/src/frontend_fox/CPasteChannelsDialog.cpp.omv~ rezound-master/src/frontend_fox/CPasteChannelsDialog.cpp
--- rezound-master/src/frontend_fox/CPasteChannelsDialog.cpp.omv~	2022-09-26 03:29:50.092934203 +0200
+++ rezound-master/src/frontend_fox/CPasteChannelsDialog.cpp	2022-09-26 03:29:53.760956329 +0200
@@ -256,14 +256,14 @@ long CPasteChannelsDialog::onDefaultButt
 	for(unsigned col=0;col<MAX_CHANNELS;col++)
 	{
 		FXCheckButton *cb=(FXCheckButton *)checkBoxMatrix->childAtRowCol(row+1,col+1);
-		cb->setCheck(FALSE);
+		cb->setCheck(false);
 	}
 
 	for(unsigned t=0;t<actionSound->sound->getChannelCount();t++)
 	{
 		FXCheckButton *cb=(FXCheckButton *)checkBoxMatrix->childAtRowCol(t+1,t+1);
 		if(cb->shown() && cb->isEnabled())
-			cb->setCheck(TRUE);
+			cb->setCheck(true);
 	}
 
 	return 1;
@@ -275,7 +275,7 @@ long CPasteChannelsDialog::onClearButton
 	for(unsigned col=0;col<MAX_CHANNELS;col++)
 	{
 		FXCheckButton *cb=(FXCheckButton *)checkBoxMatrix->childAtRowCol(row+1,col+1);
-		cb->setCheck(FALSE);
+		cb->setCheck(false);
 	}
 
 	return 1;
diff -up rezound-master/src/frontend_fox/CSoundWindow.cpp.omv~ rezound-master/src/frontend_fox/CSoundWindow.cpp
--- rezound-master/src/frontend_fox/CSoundWindow.cpp.omv~	2022-09-26 03:30:04.248019545 +0200
+++ rezound-master/src/frontend_fox/CSoundWindow.cpp	2022-09-26 03:30:13.626076024 +0200
@@ -183,8 +183,7 @@ CSoundWindow::CSoundWindow(FXComposite *
 	recreateMuteButtons(false);
 	
 	// create the font to use for status information
-        FXFontDesc d;
-        statusFont->getFontDesc(d);
+        FXFontDesc d = statusFont->getFontDesc();
         d.size-=10;
         statusFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXCheckBoxParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXCheckBoxParamValue.cpp
--- rezound-master/src/frontend_fox/FXCheckBoxParamValue.cpp.omv~	2022-09-26 03:30:29.253170029 +0200
+++ rezound-master/src/frontend_fox/FXCheckBoxParamValue.cpp	2022-09-26 03:30:35.846209650 +0200
@@ -49,8 +49,7 @@ FXCheckBoxParamValue::FXCheckBoxParamVal
 	textFont(getApp()->getNormalFont())
 {
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXComboTextParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXComboTextParamValue.cpp
--- rezound-master/src/frontend_fox/FXComboTextParamValue.cpp.omv~	2022-09-26 03:30:46.649274522 +0200
+++ rezound-master/src/frontend_fox/FXComboTextParamValue.cpp	2022-09-26 03:30:51.850305732 +0200
@@ -59,8 +59,7 @@ FXComboTextParamValue::FXComboTextParamV
 	textFont(getApp()->getNormalFont())
 {
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXConstantParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXConstantParamValue.cpp
--- rezound-master/src/frontend_fox/FXConstantParamValue.cpp.omv~	2022-09-26 03:31:00.272356241 +0200
+++ rezound-master/src/frontend_fox/FXConstantParamValue.cpp	2022-09-26 03:31:07.218397872 +0200
@@ -93,8 +93,7 @@ FXConstantParamValue::FXConstantParamVal
 	minHeight(196)
 {
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXDiskEntityParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXDiskEntityParamValue.cpp
--- rezound-master/src/frontend_fox/FXDiskEntityParamValue.cpp.omv~	2022-09-26 03:32:03.357733480 +0200
+++ rezound-master/src/frontend_fox/FXDiskEntityParamValue.cpp	2022-09-26 03:32:09.951772805 +0200
@@ -69,8 +69,7 @@ FXDiskEntityParamValue::FXDiskEntityPara
 		openAsRawCheckButton->hide();
 
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXGraphParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXGraphParamValue.cpp
--- rezound-master/src/frontend_fox/FXGraphParamValue.cpp.omv~	2022-09-26 03:32:41.144958574 +0200
+++ rezound-master/src/frontend_fox/FXGraphParamValue.cpp	2022-09-26 03:32:56.915052337 +0200
@@ -81,8 +81,7 @@ public:
 		enable();
 		flags|=FLAG_SHOWN; // I have to do this, or it will not show up.. like height is 0 or something
 
-		FXFontDesc d;
-		font->getFontDesc(d);
+		FXFontDesc d = font->getFontDesc();
 		d.weight=FONTWEIGHT_LIGHT;
 		d.size=65;
 		font=new FXFont(getApp(),d);
@@ -188,8 +187,7 @@ public:
 		enable();
 		flags|=FLAG_SHOWN; // I have to do this, or it will not show up.. like height is 0 or something
 
-		FXFontDesc d;
-		font->getFontDesc(d);
+		FXFontDesc d = font->getFontDesc();
 		d.weight=FONTWEIGHT_LIGHT;
 		d.size=65;
 		font=new FXFont(getApp(),d);
@@ -353,8 +351,7 @@ FXGraphParamValue::FXGraphParamValue(con
 	minHeight(300)
 {
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXLFOParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXLFOParamValue.cpp
--- rezound-master/src/frontend_fox/FXLFOParamValue.cpp.omv~	2022-09-26 03:33:09.274125749 +0200
+++ rezound-master/src/frontend_fox/FXLFOParamValue.cpp	2022-09-26 03:33:15.388162044 +0200
@@ -91,8 +91,7 @@ FXLFOParamValue::FXLFOParamValue(FXCompo
 	phaseSlider->setMinSize(0,0);
 
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXModalDialogBox.cpp.omv~ rezound-master/src/frontend_fox/FXModalDialogBox.cpp
--- rezound-master/src/frontend_fox/FXModalDialogBox.cpp.omv~	2022-09-26 03:33:24.222214460 +0200
+++ rezound-master/src/frontend_fox/FXModalDialogBox.cpp	2022-09-26 03:33:27.172231957 +0200
@@ -67,7 +67,7 @@ FXModalDialogBox::FXModalDialogBox(FXWin
 
 		// ??? this doesn't seem to be having any effect... ask mailing list
 #warning fix this
-	okayButton->setDefault(TRUE);
+	okayButton->setDefault(true);
 
 	// keep the dialog from getting too narrow
 	//ASSURE_WIDTH(contents,160);
diff -up rezound-master/src/frontend_fox/FXPluginRoutingParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXPluginRoutingParamValue.cpp
--- rezound-master/src/frontend_fox/FXPluginRoutingParamValue.cpp.omv~	2022-09-26 03:33:36.110284950 +0200
+++ rezound-master/src/frontend_fox/FXPluginRoutingParamValue.cpp	2022-09-26 03:33:41.585317396 +0200
@@ -206,8 +206,7 @@ FXPluginRoutingParamValue::FXPluginRouti
 	canvasParent->setBackColor(COL_BACKGROUND);
 
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size=80;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXRezWaveView.cpp.omv~ rezound-master/src/frontend_fox/FXRezWaveView.cpp
--- rezound-master/src/frontend_fox/FXRezWaveView.cpp.omv~	2022-09-26 03:33:57.852413733 +0200
+++ rezound-master/src/frontend_fox/FXRezWaveView.cpp	2022-09-26 03:34:05.262457586 +0200
@@ -340,8 +340,7 @@ FXWaveRuler::FXWaveRuler(FXComposite *p,
 	enable();
 	flags|=FLAG_SHOWN; // I have to do this, or it will not show up.. like height is 0 or something
 
-	FXFontDesc d;
-	font->getFontDesc(d);
+	FXFontDesc d = font->getFontDesc();
 	d.weight=FONTWEIGHT_LIGHT;
 	d.size=65;
 	font=new FXFont(getApp(),d);
diff -up rezound-master/src/frontend_fox/FXTextParamValue.cpp.omv~ rezound-master/src/frontend_fox/FXTextParamValue.cpp
--- rezound-master/src/frontend_fox/FXTextParamValue.cpp.omv~	2022-09-26 03:34:18.267534503 +0200
+++ rezound-master/src/frontend_fox/FXTextParamValue.cpp	2022-09-26 03:34:29.375600155 +0200
@@ -66,8 +66,7 @@ FXTextParamValue::FXTextParamValue(FXCom
 	valueTextBox->setNumColumns((FXint)(log10(maxValue)+1));
 
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
@@ -94,8 +93,7 @@ FXTextParamValue::FXTextParamValue(FXCom
 	textFont(getApp()->getNormalFont())
 {
 	// create a smaller font to use 
-        FXFontDesc d;
-        textFont->getFontDesc(d);
+        FXFontDesc d = textFont->getFontDesc();
         d.size-=10;
         textFont=new FXFont(getApp(),d);
 
diff -up rezound-master/src/frontend_fox/FXWaveScrollArea.cpp.omv~ rezound-master/src/frontend_fox/FXWaveScrollArea.cpp
--- rezound-master/src/frontend_fox/FXWaveScrollArea.cpp.omv~	2022-09-26 03:35:27.827944960 +0200
+++ rezound-master/src/frontend_fox/FXWaveScrollArea.cpp	2022-09-26 03:38:03.324857526 +0200
@@ -65,7 +65,7 @@ FXDEFMAP(FXWaveScrollArea) FXWaveViewScr
 	FXMAPFUNC(SEL_LEFTBUTTONRELEASE,	FXWaveScrollArea::ID_CANVAS,	FXWaveScrollArea::onMouseUp),
 	FXMAPFUNC(SEL_RIGHTBUTTONRELEASE,	FXWaveScrollArea::ID_CANVAS,	FXWaveScrollArea::onMouseUp),
 	FXMAPFUNC(SEL_MOTION,			FXWaveScrollArea::ID_CANVAS,	FXWaveScrollArea::onMouseMove),
-	FXMAPFUNC(SEL_TIMEOUT,			FXWindow::ID_AUTOSCROLL,	FXWaveScrollArea::onAutoScroll),
+	FXMAPFUNC(SEL_TIMEOUT,			FXWaveScrollArea::ID_AUTOSCROLL,	FXWaveScrollArea::onAutoScroll),
 
 #if FOX_MAJOR >= 1
 	// re-route the mouse wheel event to scroll/zoom horizontally instead of its default, scrolling vertically
@@ -170,7 +170,7 @@ float FXWaveScrollArea::getVertZoom() co
 void FXWaveScrollArea::setHorzOffset(sample_pos_t offset)
 {
 	//canvas->setHorzOffset(offset); will get called by calling setPosition()
-	setPosition(-offset,getYPosition());
+	setPosition(-offset,pos_y);
 }
 
 sample_pos_t FXWaveScrollArea::getHorzOffset() const
@@ -181,7 +181,7 @@ sample_pos_t FXWaveScrollArea::getHorzOf
 void FXWaveScrollArea::setVertOffset(int offset)
 {
 	//canvas->setVertOffset(offset); will get called by calling setPosition()
-	setPosition(getXPosition(),-offset);
+	setPosition(pos_x,-offset);
 }
 
 int FXWaveScrollArea::getVertOffset() const
diff -up rezound-master/src/frontend_fox/FXWaveScrollArea.h.omv~ rezound-master/src/frontend_fox/FXWaveScrollArea.h
